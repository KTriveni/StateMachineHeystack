continue
@state_machine
@state_machine_nodes
continue
@state_machine_nodes = StateMachineNode.where(state_machine_id: params['state_machine_id']) 
params
parms
    journey << "#{exit_node.state_node_id} #{exit_node.node_title}"
    journey = []
       temp_node.length <= 1
       temp_node.length < 1
p > 1
p < 1
       p = 2
       temp_node.length <= 1
       temp_node.length 
       temp_node.length < 1
       temp_node.length == 1
       temp_node.length > 1
       temp_node = exit_node.parent_node_id 
    journey << exit_node.node_title
 journey = []
    exit_node.parent_node_id
    exit_node.root
    exit_node.parent_node_id
continue
pick_up_node
pick_up_nide
continue
valid_nodes?
params
continue
valid_nodes?
params
continue
valid_nodes?
continue
@state_machine.state_machine_nodes.collect(&:state_node_id).include? params[:pick_up_node]&&params[:exit_node]
@state_machine.state_machine_nodes.collect(&:state_node_id).include? params[:pick_up_node]
@state_machine.state_machine_nodes.collect(&:state_node_id)
@state_machine.state_machine_nodes
@state_machine = StateMachine.find_by(id: params['state_machine_id'])
self.state_machine
self
@state_machine
state_machine
state_macine
(params[:pick_up_node] || params[:exit_node]).blank?
params
continue
(params[:pick_up_node] || params[:exit_node]).blank?
(params[:pick_up_node] || params[:exit_node]).present?
(params[:pick_up_node] || params[:exit_node])
(params[:pick_up_node] params[:exit_node]
(params[:pick_up_node] || params[:exit_node]
(params[:pick_up_node] || params[:exit_node]).nil?
continue
params
continue
params
continue
row.headers
row.options
row
row.values
row.headers.first.split(';')
row.headers.first.split('.')
row.headers.first
row.headers.first.to_i
row.headers.first.to_f
row.headers.first.to_hash
row.headers.first.to_s
row.headers.first.to_S
row.headers.first
row.headers.first.replace(";",",")
row.headers.first.replace(';',',')
row.headers.first.split(';')
row.headers.first.split('/;')
row.headers.first.split
row.headers.first
row.headers.first.split(/\s*([,;\r\n]+|\s\s)\s*/)
row.headers.first.split(/\s*[,;]\s*)
row.headers.first.split(";")
row.headers.first.split(';')
row.headers.first.split('-')
row.headers.first.split('- ')
row.headers.first.split(' ')
row.headers.first.split(';')
row.headers.first
row.headers.class
row.headers
row.headers.to_h
row.to_h
row.headers
row.headers.to_s
row.headers.to_S
row.headers
row.headers.split(' ')
row.headers.split(';')
row.headers.split
row.headers
row
file.headers
headers
file
continue
file
row
continue
params[:state_machine_id]
params
@state_machine_nodes
@state_machine_node
@state_machine
